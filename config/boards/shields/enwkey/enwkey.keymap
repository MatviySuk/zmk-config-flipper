/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
};

&sk {
    release-after-ms = <2000>;
    quick-release;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp ESC>;
        };

        combo_bksc {
            timeout-ms = <20>;
            key-positions = <23 24>;
            bindings = <&to 4>;
        };

        combo_ent {
            timeout-ms = <20>;
            key-positions = <14 15>;
            bindings = <&kp RET>;
        };

        combo_1 {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&to 2>;
        };

        combo_2 {
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&to 3>;
        };

        combo_3 {
            timeout-ms = <50>;
            key-positions = <4 5>;
            bindings = <&kp BKSP>;
        };

        caps {
            timeout-ms = <50>;
            key-positions = <24 25>;
            bindings = <&kp CAPS>;
        };

        rshift {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&sk RSHIFT>;
        };

        osl {
            timeout-ms = <50>;
            key-positions = <3 5>;
            bindings = <&sl 6>;
        };

        q {
            timeout-ms = <10>;
            key-positions = <8 9>;
            bindings = <&kp Q>;
            layers = <1>;
        };

        y {
            timeout-ms = <20>;
            key-positions = <18 19>;
            bindings = <&kp Y>;
            layers = <1>;
        };

        bslh {
            timeout-ms = <20>;
            key-positions = <12	13>;
            bindings = <&kp BSLH>;
            layers = <2>;
        };

        lbkt {
            timeout-ms = <20>;
            key-positions = <22	23>;
            bindings = <&kp LBKT>;
            layers = <2>;
        };

        plus {
            timeout-ms = <20>;
            key-positions = <8 9>;
            bindings = <&kp LS(EQUAL)>;
            layers = <3>;
        };

        prcnt {
            timeout-ms = <20>;
            key-positions = <18 19>;
            bindings = <&kp PRCNT>;
            layers = <3>;
        };

        minus {
            timeout-ms = <20>;
            key-positions = <12	13>;
            bindings = <&kp MINUS>;
            layers = <3>;
        };

        n0 {
            timeout-ms = <20>;
            key-positions = <22	23>;
            bindings = <&kp N0>;
            layers = <3>;
        };

        lalt {
            timeout-ms = <20>;
            key-positions = <8 9>;
            bindings = <&kp LALT>;
            layers = <4>;
        };

        del {
            timeout-ms = <20>;
            key-positions = <18 19>;
            bindings = <&kp DEL>;
            layers = <4>;
        };

        left {
            timeout-ms = <20>;
            key-positions = <12	13>;
            bindings = <&kp LEFT>;
            layers = <4>;
        };

        lclk {
            timeout-ms = <20>;
            key-positions = <22	23>;
            bindings = <&mkp LCLK>;
            layers = <4>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hs: homerow_shifts {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFTS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <190>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        NEW_LAYER {
            bindings = <
&kp Q  &kp W      &kp F      &kp P      &kp B      &kp J  &kp L  &kp U      &kp Y    &kp SEMI
&kp A  &kp R      &kp S      &kp T      &kp G      &kp M  &kp N  &kp E      &kp I    &kp O
&kp X  &kp C      &kp D      &kp V      &kp Z      &kp K  &kp H  &kp COMMA  &kp DOT  &kp FSLH
                             &kp LSHFT  &kp LCTRL  &kp SPACE  &kp RGUI
            >;
        };
    };
};

